#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

set -eo pipefail

# Parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
BUILDPACK_DIR=$(cd "$(dirname "$0")"; cd ..; pwd)

function error() {
  echo " !     $*" >&2
  exit 1
}

function topic() {
  echo "-----> $*"
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

if [ -f "$ENV_DIR/DDTRACE_RELEASE" ]; then
  RELEASE_VERSION=$(cat "$ENV_DIR/DDTRACE_RELEASE")
  RELEASE_URL="https://github.com/DataDog/dd-trace-php/releases/download/$RELEASE_VERSION/datadog-setup.php"
else
  RELEASE_VERSION=latest
  RELEASE_URL="https://github.com/DataDog/dd-trace-php/releases/latest/download/datadog-setup.php"
fi

TMP_DIR=$(mktemp --directory)

DDTRACE_SETUP="$TMP_DIR/datadog-setup.php"

topic "Downloading DD Trace PHP from $RELEASE_URL"

curl -L $RELEASE_URL --output $DDTRACE_SETUP | indent

topic "Installing DD Trace PHP"

php $DDTRACE_SETUP \
  --install-dir $BUILD_DIR/datadog \
  --ini $BUILD_DIR/.heroku/php/etc/php/conf.d/98-ddtrace.ini \
  --php-bin=all \
  --enable-profiling \
  --enable-appsec

topic "Finished installing DD Trace PHP"

exit 0

## END

# Parse and derive params
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3
BUILDPACK_DIR=$(cd "$(dirname "$0")"; cd ..; pwd)

function error() {
  echo " !     $*" >&2
  exit 1
}

function topic() {
  echo "-----> $*"
}

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

ARCH=$(uname -m)
PLATFORM="$ARCH-linux-gnu"

PHP_API=$(php -i | grep "^PHP API" | sed "s/^.* => //")
PHP_CONF_DIR="$BUILD_DIR/.heroku/php/etc/php/conf.d"
PHP_EXTENSION_DIR=$(php -i | grep "^extension_dir" | sed "s/^.* => //")

if [ -f "$ENV_DIR/DD_ENABLE_PROFILING" ]; then
  DD_ENABLE_PROFILING=$(cat "$ENV_DIR/DD_ENABLE_PROFILING")
else
  DD_ENABLE_PROFILING=false
fi

if [ -f "$ENV_DIR/DD_ENABLE_APPSEC" ]; then
  DD_ENABLE_APPSEC=$(cat "$ENV_DIR/DD_ENABLE_APPSEC")
else
  DD_ENABLE_APPSEC=false
fi

if [ -f "$ENV_DIR/DDTRACE_RELEASE" ]; then
  RELEASE_VERSION=$(cat "$ENV_DIR/DDTRACE_RELEASE")
else
  RELEASE_VERSION=0.86.3
fi

RELEASE_PREFIX="https://github.com/DataDog/dd-trace-php/releases/download/$RELEASE_VERSION"

TMP_DIR=$(dirname $(mktemp -u))/dd-install

mkdir -p $TMP_DIR

RELEASE_URL="$RELEASE_PREFIX/dd-library-php-$RELEASE_VERSION-$PLATFORM.tar.gz"
TMP_TAR="$TMP_DIR/dd-library-php.tar.gz"

topic "Downloading DD Trace PHP from $RELEASE_URL"

curl --silent --show-error --fail --location --output $TMP_TAR $RELEASE_URL 2>&1 | indent

tar -xf $TMP_TAR -C $TMP_DIR

TMP_EXTRACTED_ROOT="$TMP_DIR/dd-library-php"
TMP_TRACE_ROOT="$TMP_EXTRACTED_ROOT/trace"
TMP_TRACE_BRIDGE="$TMP_TRACE_ROOT/bridge"
TMP_APPSEC_ROOT="$TMP_EXTRACTED_ROOT/appsec"
TMP_APPSEC_BIN="$TMP_APPSEC_ROOT/bin"
TMP_APPSEC_ETC="$TMP_APPSEC_ROOT/etc"
TMP_PROFILING_ROOT="$TMP_EXTRACTED_ROOT/profiling"

INSTALL_DIR="$BUILD_DIR/.heroku/datadog/dd-trace-sources"

topic "Installing required sources files to $INSTALL_DIR"

mkdir -p $INSTALL_DIR
cp -r $TMP_TRACE_BRIDGE $INSTALL_DIR
cp -r $TMP_APPSEC_BIN $INSTALL_DIR
cp -r $TMP_APPSEC_ETC $INSTALL_DIR

INSTALL_DIR="/app/.heroku/datadog/dd-trace-sources"

TRACE_WRAPPER_PATH="$INSTALL_DIR/bridge/dd_wrap_autoloader.php"
APPSEC_RULES_PATH="$INSTALL_DIR/etc/recommended.json"
APPSEC_HELPER_PATH="$INSTALL_DIR/bin/appsec-helper"


topic "Installing extensions to $PHP_EXTENSION_DIR"

DD_EXTENSION_PATH="$TMP_TRACE_ROOT/ext/$PHP_API/ddtrace.so"
DD_EXTENSION_DEST="$PHP_EXTENSION_DIR/ddtrace.so"

cp $DD_EXTENSION_PATH $DD_EXTENSION_DEST

DD_PROFILING_EXTENSION_PATH="$TMP_PROFILING_ROOT/ext/$PHP_API/datadog-profiling.so"
DD_PROFILING_EXTENSION_DEST="$PHP_EXTENSION_DIR/datadog-profiling.so"

cp $DD_PROFILING_EXTENSION_PATH $DD_PROFILING_EXTENSION_DEST

DD_APPSEC_EXTENSION_PATH="$TMP_APPSEC_ROOT/ext/$PHP_API/ddappsec.so"
DD_APPSEC_EXTENSION_DEST="$PHP_EXTENSION_DIR/ddappsec.so"

cp $DD_APPSEC_EXTENSION_PATH $DD_APPSEC_EXTENSION_DEST


topic "Configuring extensions in $PHP_CONF_DIR"

INI_FILE="$PHP_CONF_DIR/98-ddtrace.ini"

touch $INI_FILE

cat <<EOT >> $INI_FILE
[PHP]
extension=ddtrace.so

datadog.trace.request_init_hook=$TRACE_WRAPPER_PATH
datadog.appsec.helper_path=$APPSEC_HELPER_PATH
datadog.appsec.rules=$APPSEC_RULES_PATH
datadog.appsec.enabled=On
EOT

if [[ $DD_ENABLE_PROFILING = true ]]; then
  topic "Profiling is enabled"

  echo "extension=datadog-profiling.so" >> $INI_FILE
else
  topic "Profiling is disabled"
fi

if [[ $DD_ENABLE_APPSEC = true ]]; then
  topic "Appsec is enabled"

  echo "extension=ddappsec.so" >> $INI_FILE
else
  topic "Appsec is disabled"
fi

echo "Done" | indent
